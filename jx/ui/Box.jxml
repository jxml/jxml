<Element xmlns="jx/ui">
	<script>
		<![CDATA[
			function onAttr(attr, delta) {
				calcLayout(attr, delta);
			}

			function calcLayout(attr, delta) {
				// TODO: only calculate if something changed

				// Determine direction of flow or default to vertical
				var direction = attr.direction || 'vertical',
					flow_dim = 'height', // dimension in the flow direction
					full_dim = 'width',  // other dimension (full size)
					flow_axis = 'y',     // positional axis
					full_axis = 'x',     // other axis (full size)
					MIN_SIZE = 10,       // minimum element size
					num_children = 0;    // number of children

				// check if horizontal direction is specified or if width > height to determine direction
				if (direction == 'horizontal' || attr.width > attr.height)
					flow_dim = 'width',
					full_dim = 'height',
					flow_axis = 'x',
					full_axis = 'y';

				var padding = attr['padding'] || 0,
					border = attr['borderWidth'] || 0,
					my_size = (attr[flow_dim] || 100) - (padding + border) * 2,
					full_size = (attr[full_dim] || 100) - (padding + border) * 2;

				var num_specified = 0, total_specified_size = 0;

				for (var k in attr.children) {
					if (attr.children[k][flow_dim]) {
						total_specified_size += attr.children[k][flow_dim] || 0;
						num_specified++;
					}

					num_children++;
				}

				var gap = attr.gap || 0,
					avail_space = my_size - gap * (num_children - 1), // available space for all elements
					position = padding, // current position for next element
					size = 0;

				if (total_specified_size < avail_space)
					// distribute remaining space over unspecified elements
					size = (avail_space - total_specified_size) / (num_children - num_specified);

				delta.children = delta.children || {};

				for (var k in attr.children)
					delta.children[k] = delta.children[k] || {};

				// TODO: Order matters
				for (k in attr.children) {
					var child = attr.children[k],
						delta_child = delta.children[k];

					if (!child[flow_dim]) delta_child[flow_dim] = Math.max(size, MIN_SIZE);
					if (!child[full_dim]) delta_child[full_dim] = full_size;

					delta_child[full_axis] = padding;
					delta_child[flow_axis] = position;
					position += gap + (child[flow_dim] || delta_child[flow_dim]);
				}
			}
		]]>
	</script>
</Element>
